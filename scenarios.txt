init:
    User -> deploy(deadline <= curr_time) -> FAIL
    User -> deploy(target <= 0) -> FAIL
    User -> deploy(invalid token id) -> FAIL
    User -> deploy (deadline > curr_time, target > 0, tokenId ok (2 cases - EGLD/another token)) -> PASS
    User -> deploy (NFT id) -> FAIL (Should be an esdt/egld)

fund:
    User -> fund after deadline -> FAIL --------------------- TUDOR
    User -> fund with wrong token id -> FAIL --------------------- TUDOR
    User -> fund(before deadline, sent tokenId == tokenId set by the owner) -> PASS --------------------- TUDOR

claim:
    User -> claim before deadline -> FAIL -------------- ANDREI
    Target achieved -> User (not owner) -> claim -> FAIL ------------------- ANDREI
    Target not achieved -> User (no previous deposit) -> claim -> FAIL --------------------- ALEXANDRA
                        -> User (already claimed funds) -> claim -> FAIL ------------- ANDREI
    Target Achieved, Deadline passed -> Owner -> claim -> PASS ---------------------- ANDREI
    Target not achieved -> User -> claim -> PASS ---------------------------- ANDREI

getCurrentFunds:
    Query balance (getCurrentFunds) (expected 0) -> 2 Funds (1 EGLD each) -> Query balance (expected 2) ----------- ALEXANDRA
    
getDeposit:
    User funds -> Query deposit -> expected result: funds he previously added -------------- ALEXANDRA

Other:
    Owner -> fund -> claim (Target not achieved - Status failed) -> PASS
    User -> fund -> claim (Target not achieved - Status failed) -> PASS
    